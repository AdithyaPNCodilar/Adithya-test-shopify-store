<h2 class="carousel-heading">{{ section.settings.name }}</h2>

{% schema %}
{
  "name": "Custom Carousel",
  "settings": [
    {
      "type": "text",
      "id": "name",
      "label": "Carousel Heading"
    }
  ],
  "blocks": [
    {
      "type": "carousel_item",
      "name": "Carousel Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "text",
          "id": "description",
          "label": "Description"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Carousel",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<style>
.carousel-heading {
  text-align: center;
  margin-bottom: 20px;
}

.carousel {
  position: relative;
  display: flex;
  overflow: hidden;
  width: 100%;
  margin-bottom: 40px; /* Increased margin for additional padding */
}

.carousel-inner {
  display: flex;
  transition: transform 0.5s ease-in-out;
}

.carousel-item {
  min-width: 25%; /* 100% / 4 blocks = 25% */
  box-sizing: border-box;
  position: relative;
  padding: 10px;
}

.carousel-item img {
  width: 100%;
  height: auto; /* Adjust to the content's height */
  display: block;
}

.carousel-item a {
  text-decoration: none; /* Remove underline from links */
}

.carousel-caption {
  background-color: rgba(255, 255, 255, 0.8); /* White background with some transparency */
  color: #000; /* Black text color */
  padding: 10px;
  text-align: left; /* Align text to the left */
  box-sizing: border-box;
}

.carousel-caption h2 {
  font-size: 16px;
  margin: 0;
}

.carousel-caption p {
  margin: 5px 0 0;
}

.carousel-control {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: rgba(0, 0, 0, 0.5);
  color: #fff;
  padding: 10px;
  cursor: pointer;
  z-index: 1;
}

.carousel-control.prev {
  left: 10px;
}

.carousel-control.next {
  right: 10px;
}

/* Media query for smaller screens */
@media (max-width: 768px) {
  .carousel-item {
    min-width: 100%;
  }
}
</style>

<div class="carousel">
  <div class="carousel-inner">
    {% for block in section.blocks %}
      <div class="carousel-item">
        <a href="{{ block.settings.link }}">
          <img src="{{ block.settings.image | img_url: 'master' }}" alt="{{ block.settings.title }}">
          <div class="carousel-caption">
            <h2>{{ block.settings.title }}</h2>
            <p>{{ block.settings.description }}</p>
          </div>
        </a>
      </div>
    {% endfor %}
  </div>
  <div class="carousel-control prev" onclick="moveCarousel(-1)">&#10094;</div>
  <div class="carousel-control next" onclick="moveCarousel(1)">&#10095;</div>
</div>

<script>
let currentIndex = 0;
const items = document.querySelectorAll('.carousel-item');
const totalItems = items.length;
let itemsPerView = window.innerWidth <= 768 ? 1 : 4;

function updateCarousel() {
  const inner = document.querySelector('.carousel-inner');
  inner.style.transform = `translateX(-${(currentIndex * (100 / itemsPerView))}%)`;
}

function moveCarousel(direction) {
  currentIndex = (currentIndex + direction + totalItems) % totalItems;
  if (window.innerWidth <= 768) {
    itemsPerView = 1;
  } else {
    itemsPerView = 4;
  }
  updateCarousel();
}

window.addEventListener('resize', () => {
  if (window.innerWidth <= 768) {
    itemsPerView = 1;
  } else {
    itemsPerView = 4;
  }
  updateCarousel();
});

document.addEventListener('DOMContentLoaded', () => {
  updateCarousel();
});
</script>
